syntax = "proto3";
import "user.proto";
package rpc.feed;
option go_package = "GuTikTok/src/rpc/feed";

message Video {
  uint32 id = 1;
  user.User author = 2;
  string play_url = 3;
  string cover_url = 4;
  uint32 favorite_count = 5;
  uint32 comment_count = 6;
  bool is_favorite = 7;
  string title = 8;
}

message ListFeedRequest {
  optional string latest_time = 1;
  optional uint32 actor_id = 2;
}

message ListFeedResponse {
  int32 status_code = 1;
  string status_msg = 2;
  optional uint64 next_time = 3;
  repeated Video video_list = 4;
}

message QueryVideosRequest {
  uint32 actor_id = 1;
  repeated uint32 video_ids = 2;
}

message QueryVideosResponse {
  int32 status_code = 1;
  string status_msg = 2;
  repeated Video video_list = 3;
}

message VideoExistRequest {
  uint32 video_id = 1; // 视频id
}

message VideoExistResponse {
  int32 status_code = 1; // 状态码，0-成功，其他值-失败
  string status_msg = 2; // 返回状态描述
  bool existed = 3;
}

message QueryVideoSummaryAndKeywordsRequest {
  uint32 actor_id = 1;
  uint32 video_id = 2;
}

message QueryVideoSummaryAndKeywordsResponse {
  int32 status_code = 1; // 状态码，0-成功，其他值-失败
  string status_msg = 2; // 返回状态描述
  string summary = 3;
  string keywords = 4;
}

service FeedService {
  rpc ListVideosByRecommend(ListFeedRequest) returns (ListFeedResponse);
  rpc ListVideos(ListFeedRequest) returns (ListFeedResponse);
  rpc QueryVideos(QueryVideosRequest) returns (QueryVideosResponse);
  rpc QueryVideoExisted(VideoExistRequest) returns (VideoExistResponse);
  rpc QueryVideoSummaryAndKeywords(QueryVideoSummaryAndKeywordsRequest) returns (QueryVideoSummaryAndKeywordsResponse);
}
